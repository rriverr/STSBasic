<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- @Controller 어노테이션이 명시된 클래스를 Controller 객체로 생성한다. -->
	<!-- annotation-driven을 사용하지 않으면 모든 컨트롤러 클래스를 <bean>태그로 생성해주어야 한다. -->
	<annotation-driven />


	<!-- jsp 파일을 제외한 html, css, js 파일과 이미지 파일 등을 사용하기 위한 resource 폴더 지정 -->
	<!-- index.html 파일을 만들고 웹브라우저에서 접근하려면 http://lh:8090/context명/resource/index.html -->
	<!-- 물론 res 등으로 줄여 사용해도 상관 없고, 그냥 /로 설정할 경우 http://lh:8090/index.html로 접근 
		가능 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 컨트롤러 객체에서 반환된 ModelAndView 객체에서 뷰에 해당하는 JSP 파일을 검색 하기 위해 InternalResourceViewResolver 
		객체를 생성 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- prefix = jsp파일의 위치 / suffix = jsp 파일의 확장자를 명시해 정확한 jsp 파일을 찾을 수 있게 
			한다. -->

	</beans:bean>

	<!-- com.company.hello 패키지 하위의 모든 컴포넌트를 사용할 수 있도록 스캔한다. -->
	<context:component-scan
		base-package="com.company.hello" />

	<!-- <beans:bean id="memberService" class="com.company.hello.member.MemberService" 
		/> -->
	<!-- Service 클래스에서 @Service 어노테이션을 사용하면 xml 파일에 직접 빈 객체 생성 코드를 넣지 않아도 된다. -->

</beans:beans>
